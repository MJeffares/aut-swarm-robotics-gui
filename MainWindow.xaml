<Window x:Class="SwarmRoboticsGUI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:SwarmRoboticsGUI"
    xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
    xmlns:em="clr-namespace:Emgu.CV.UI;assembly=Emgu.CV.UI"   
    mc:Ignorable="d"
        
    Icon="sr-icon.ico"        
    Title="Swarm Robotics Graphics User Interface" 
    Height="900" Width="1600" 
    MinHeight="300" MinWidth="500"
    WindowStartupLocation="CenterScreen" 
    Closing="Window_Closing">

    <Window.Resources>
        <!--Styles-->
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource FontLightBrush}"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource FontLightBrush}"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource FontLightBrush}"/>
        </Style>
        <Style TargetType="Border">
            <Setter Property="Background" Value="{StaticResource WindowForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource WindowBackgroundBrush}"/>
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="Foreground" Value="{StaticResource FontDarkBrush}"/>
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>
        <Style TargetType="Menu">
            <Setter Property="Foreground" Value="{StaticResource FontLightBrush}"/>
            <Setter Property="Background" Value="{StaticResource WindowAccentBrush}"/>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="{StaticResource WindowForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource WindowForegroundBrush}"/>
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Background" Value="{StaticResource ListItemBrush}"/>
        </Style>
        <Style x:Key="TempMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="{StaticResource FontLightBrush}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Canvas.Background" Value="{StaticResource WindowAccentBrush}"/>
            <Setter Property="Padding" Value="10,0"/>
        </Style>
    </Window.Resources>

    <DockPanel x:Name="innerWin" Background="{StaticResource WindowBackgroundBrush}">
        <Menu DockPanel.Dock="Top" Height="40" MinWidth="300" VerticalContentAlignment="Stretch">
            <MenuItem Style="{StaticResource TempMenuItemStyle}" Header="File" VerticalAlignment="Stretch" Height="40">
                <MenuItem x:Name="menuRecordNew" Header="New Recording" IsEnabled="False" Click="menuRecordNew_Click" />
                <MenuItem x:Name="menuRecordPause" Header="Pause Recording" IsCheckable="True" IsEnabled="False"/>
                <MenuItem x:Name="menuRecordStop" Header="Stop Recording" IsEnabled="False" Click="menuRecordStop_Click" />
                <Separator/>
                <MenuItem x:Name="menuRecordingSettings" Header="Recording Settings" />
            </MenuItem>

            <MenuItem Style="{StaticResource TempMenuItemStyle}" Header="Display" >
                <MenuItem x:Name="menuViewList" Header="View"/>
                <MenuItem x:Name="menuFilterList" Header="Camera Filters" />
                <MenuItem x:Name="menuOverlayList" Header="Overlays" />
                <MenuItem x:Name="menuSourceList" Header="Source" />
                <MenuItem x:Name="menuFilterFlipVertical" Header="Flip Vertical" Click="menuFilterFlipVertical_Click"/>
                <MenuItem x:Name="menuFilterFlipHorizontal" Header="Flip Horizontal" Click="menuFilterFlipHorizontal_Click"/>
            </MenuItem>

            <MenuItem Style="{StaticResource TempMenuItemStyle}" Header="Camera" >
                <MenuItem x:Name="menuCameraList" Header="Connected Cameras"/>
                <MenuItem x:Name="menuCameraCapabilityList" Header="Camera Resolution"/>
                <MenuItem x:Name="menuCameraConnect" Header="Start Capture" IsEnabled="False" IsCheckable="True"  Click="menuCameraConnect_Click"/>
                <MenuItem x:Name="menuCameraFreeze" Header="Freeze Frame" IsEnabled="False" IsCheckable="True" Click="menuCameraFreeze_Click" />
                <Separator/>
                <MenuItem x:Name="menuCameraOptions" Header="Camera Options" Click="menuCameraOptions_Click"/>
            </MenuItem>

            <MenuItem Style="{StaticResource TempMenuItemStyle}" x:Name="menuCommunication" Header="Communications">
            </MenuItem>

            <MenuItem Style="{StaticResource TempMenuItemStyle}" Header="Replay" >
                <MenuItem x:Name="menuReplayOpen" Header="Open Replay" Click="menuReplayOpen_Click"/>
                <MenuItem x:Name="menuReplayPause" Header="Pause Replay" IsCheckable="True" IsEnabled="False"/>
                <Separator/>
                <MenuItem x:Name="menuReplaySettings" Header="Video Settings" Click="menuPlaceHolder_Click" />
            </MenuItem>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom" Background="{StaticResource WindowAccentBrush}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="51"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem>
                <TextBlock Name="statusFPS" Text="FPS: "/>
            </StatusBarItem>

            <Separator Grid.Column="1"/>

            <StatusBarItem Grid.Column="2">
                <TextBlock Name="statusRecordingDot" Foreground="Black" Text="●"/>
            </StatusBarItem>

            <StatusBarItem Grid.Column="3">
                <TextBlock Name="statusRecordingText" Text="Not Recording"/>
            </StatusBarItem>

            <Separator Grid.Column="4"/>

            <StatusBarItem Grid.Column="5">
                <TextBlock Name="statusCameraName" Text="No Camera Selected"/>
            </StatusBarItem>

            <Separator Grid.Column="6"/>

            <StatusBarItem Grid.Column="7">
                <TextBlock Name="statusDisplayFilter" Text="No Filter"/>
            </StatusBarItem>

            <Separator Grid.Column="8"/>

            <StatusBarItem Grid.Column="9">
                <TextBlock Name="statusTime" Text="00:00:00:00">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Current Time"/>
                            <MenuItem Header="Recording Time"/>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
            </StatusBarItem>

        </StatusBar>

        <Grid x:Name="mainGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Column0" Width="2*" MinWidth="150"/>
                <ColumnDefinition x:Name="Column1" Width="2*" MinWidth="300"/>
                <ColumnDefinition Width="300" MinWidth="250" MaxWidth="400"/>
                <!--<ColumnDefinition x:Name="Column2" Width="5"/>-->
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Background="{StaticResource WindowForegroundBrush}"
                  VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Received Data" 
                           Foreground="{StaticResource FontLightBrush}"
                           FontSize="20"
                           FontWeight="DemiBold"
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"
                           TextAlignment="Center"/>
                <WrapPanel Grid.Row="1">
                    <!--<Button x:Name="receivedDataNewline" Content="/n" Margin="10" Click="receivedDataNewline_Click"/>-->
                    <!--<Button x:Name="receivedDataClear" Content="clear" Margin="5" Click="receivedDataClear_Click"/>-->
                    <!--<Button x:Name="receivedDataClear" Content="clear" Margin="5" Click="receivedDataClear_Click"/>-->
                    <!--<Button x:Name="receivedDataRemove" Content="Add" Margin="5" Click="receivedDataAdd_Click"/>
                    <Button x:Name="receivedDataAdd" Content="Remove" Margin="5" Click="receivedDataRemove_Click"/>-->
                </WrapPanel>

                <!--<ListView Name="lvCommunicatedMessages" Visibility="Collapsed" 
                          Grid.Column="0" 
                          Grid.Row="2" 
                          Grid.RowSpan = "1" 
                          Margin="5" 
                          ScrollViewer.HorizontalScrollBarVisibility="Visible">
                    <ListView.Resources>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView x:Name = "gvCommunicatedMessages">
                            <GridViewColumn x:Name = "gvcTimeStamp" DisplayMemberBinding="{Binding TimeStampDisplay}">
                                <GridViewColumnHeader Tag="time_stamp" Click="GridViewColumnHeader_Click" Content="TimeStamp      "/>
                            </GridViewColumn>


                            <GridViewColumn x:Name = "gvcMessageType" DisplayMemberBinding="{Binding MessageTypeDisplay}">
                                <GridViewColumnHeader Tag = "message_type" Click="GridViewColumnHeader_Click" Content="Message Type     "/>
                            </GridViewColumn>

                            <GridViewColumn x:Name = "gvcMessageData" DisplayMemberBinding="{Binding MessageDataDisplay}">
                                <GridViewColumnHeader Tag = "MessageDataDisplay" Click="GridViewColumnHeader_Click" Content="Message Data     "/>
                            </GridViewColumn>

                            <GridViewColumn  x:Name = "gvcXbeeFrameLength" DisplayMemberBinding="{Binding FrameLengthDisplay}">
                                <GridViewColumnHeader Tag = "frame_length" Click="GridViewColumnHeader_Click" Content="Xbee Frame Length      "/>
                            </GridViewColumn>

                            <GridViewColumn  x:Name = "gvcXbeeFrameID" DisplayMemberBinding="{Binding FrameCommandDisplay}">
                                <GridViewColumnHeader Tag = "frame_ID" Click="GridViewColumnHeader_Click" Content="Xbee Frame ID     "/>
                            </GridViewColumn>

                            <GridViewColumn x:Name = "gvcSourceAddress" DisplayMemberBinding="{Binding SourceDisplay}">
                                <GridViewColumnHeader Tag = "SourceDisplay" Click="GridViewColumnHeader_Click" Content="Source Address     "/>
                            </GridViewColumn>

                            <GridViewColumn  x:Name = "gvcRawData" DisplayMemberBinding="{Binding RawMessageDisplay}">
                                <GridViewColumnHeader Tag = "RawMessageDisplay" Click="GridViewColumnHeader_Click" Content="Raw Data      "/>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                </ListView>-->

                <DataGrid x:Name="RxDataGrid" 
                          ItemsSource="{Binding XbeeMessages, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}" 
                          AutoGenerateColumns="False"      
                          Grid.Column="0" 
                          Grid.Row="2"   
                          Margin="0,0,5,0"
                          BorderThickness="0"
                          CanUserReorderColumns="True" 
                          CanUserResizeColumns="True" 
                          CanUserResizeRows="False" 
                          CanUserSortColumns="True">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="TimeStamp" Width="SizeToHeader"     
                                                IsReadOnly="True" SortMemberPath="timeStamp">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding TimeStamp, StringFormat=HH:mm:ss:fff}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Source Address" Width="SizeToHeader" 
                                                IsReadOnly="True" SortMemberPath="SourceDisplay">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SourceDisplay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        
                        <DataGridTemplateColumn Header="Message Type" Width="SizeToHeader" 
                                                IsReadOnly="True" SortMemberPath="MessageTypeDisplay">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding MessageTypeDisplay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Message Data" Width="SizeToHeader"
                                                IsReadOnly="True" SortMemberPath="MessageTypeDisplay">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding MessageDataDisplay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--
                        <DataGridTemplateColumn Header="Xbee Frame Length" Width="SizeToHeader" 
                                                IsReadOnly="True" SortMemberPath="FrameLengthDisplay">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FrameLengthDisplay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Xbee Frame ID" Width="SizeToHeader" 
                                                IsReadOnly="True" SortMemberPath="FrameCommandDisplay">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FrameCommandDisplay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        -->
                        
                        <DataGridTemplateColumn Header="Raw Data" Width="SizeToHeader" 
                                                IsReadOnly="True" SortMemberPath="RawMessageDisplay">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding RawMessageDisplay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

            <DockPanel Grid.Column="1">
                <!--<StackPanel DockPanel.Dock="Top" Margin="5">
                    <StackPanel Height="90"  Width="220" HorizontalAlignment="Left" >
                        <Label Content="Communication" HorizontalAlignment="Center" Margin="0,0,0,0"/>
                        <ComboBox x:Name = "dispSelectRobot"  MinHeight = "24" Width = "194" Margin = "12,0,14,8" HorizontalAlignment="Center" SelectedIndex = "0" SelectionChanged="dispSelectRobot_SelectionChanged" ItemsSource="{Binding}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="4*"/>
                                        </Grid.ColumnDefinitions>

                                        <Rectangle Grid.Column="0" Margin="5,1" Width="12" Height="12" Stroke="{Binding Path=Colour}" StrokeThickness="1" VerticalAlignment="Center" Fill="{Binding Path=Colour}"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Path=Name}"/>
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <WrapPanel HorizontalAlignment="Center">
                            <Button Name="dispSelectBtnPrevious" Margin="5,0" Width="60" Click="dispSelectBtnPrevious_Click">Previous</Button>
                            <Button Name="dispSelectBtnNext" Margin="5,0" Width="60" Click="dispSelectBtnNext_Click">Next</Button>
                            <Button Name="dispSelectBtnBlue" Margin="5,0" Width="60">Groups</Button>
                        </WrapPanel>
                    </StackPanel>
                </StackPanel>-->

                <TabControl x:Name="tcCenter" Margin="0,40,0,0">
                    <TabItem Header="No Connection" x:Name="nc">
                        <TextBlock HorizontalAlignment="Center" 
                                   TextWrapping="WrapWithOverflow"
                                   TextAlignment="Center"
                                   VerticalAlignment="Center" 
                                   FontWeight="DemiBold"   
                                   FontSize="20"
                                   Text="Please connect to an Xbee module before continuing"/>
                    </TabItem>

                    <!--<TabItem Header="Swarm Control" IsEnabled="False"/>-->

                    <TabItem Header="Robot Control" IsEnabled="False">
                        <WrapPanel>
                            <Border BorderThickness="2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0">
                                <StackPanel Width="180" Margin="5">
                                    <Label Content="Robot Tasks" 
                                           Margin="5" 
                                           FontWeight="Bold" 
                                           HorizontalAlignment="Center"/>
                                    <Grid Background="{StaticResource WindowForegroundBrush}">
                                        <Button x:Name="robotTaskObstacleAvoidance"
                                              Content="Obstacle Avoidance"
                                              Height="25"
                                              HorizontalAlignment="Center"  
                                              HorizontalContentAlignment="Center"
                                              VerticalContentAlignment="Center"
                                              Click="robotTaskObstacleAvoidance_Click"/>
                                    </Grid>
                                    <Separator Padding="0" Margin="0"/>
                                    <Button x:Name="robotTaskStopMoving" 
                                            Height="25"
                                            HorizontalAlignment="Stretch" 
                                            Content="Stop Moving"
                                            Click="robotTaskStopMoving_Click"/>
                                    <Separator Padding="0" Margin="0"/>
                                    <Button x:Name="robotTaskMoveRandomly" 
                                            Height="25"
                                            HorizontalAlignment="Stretch" 
                                            Content="Move Randomly"
                                            Click="robotTaskMoveRandomly_Click"/>
                                    <Separator Padding="0" Margin="0"/>
                                    <Button x:Name="robotTaskDock"
                                            Height="25"
                                            HorizontalAlignment="Stretch" 
                                            Content="Dock"
                                            Click="robotTaskDock_Click"/>
                                    <Separator Padding="0" Margin="0"/>
                                    <Button x:Name="robotTaskReleaseDock" 
                                            Height="25"
                                            HorizontalAlignment="Stretch" 
                                            Content="Release Dock"
                                            Click="robotTaskReleaseDock_Click"/>
                                    <Separator Padding="0" Margin="0"/>
                                    <Button  x:Name="robotTaskMoveTowardsLight"
                                            Height="25"
                                            HorizontalAlignment="Stretch" 
                                            Content="Move Towards Light"
                                            Click="robotTaskMoveTowardsLight_Click"/>
                                    <Separator Padding="0" Margin="0"/>
                                    <Button x:Name="robotTaskFollowLine"
                                            Height="25"
                                            HorizontalAlignment="Stretch" 
                                            Content="Follow Line"
                                            Click="robotTaskFollowLine_Click"/>
                                    <Separator Padding="0" Margin="0"/>
                                    <StackPanel Orientation="Vertical">
                                        <Button x:Name="robotTaskRotateToHeading" 
                                                Height="25"
                                                HorizontalAlignment="Stretch" 
                                                Click="robotTaskRotateToHeading_Click"
                                                Content="Turn to Facing"/>
                                        <Separator Padding="0" Margin="0"/>
                                        <local:IntegerUpDown x:Name="UDrobotTaskRotateToHeading"
                                                             Text="Facing (Degrees)" 
                                                             Maximum="180" 
                                                             Minimum="-180" 
                                                             Height="30"
                                                             Delay="300"
                                                             Interval="8"
                                                             HorizontalAlignment="Stretch"/>
                                    </StackPanel>
                                    <Separator Padding="0" Margin="0"/>
                                    <StackPanel Orientation="Vertical">
                                        <Button x:Name="robotTaskMoveToPosition"
                                                Height="25"
                                                HorizontalAlignment="Stretch" 
                                                Click="robotTaskMoveToPosition_Click"
                                                Content="Move to Position"/>
                                        <Separator Padding="0" Margin="0"/>
                                        <local:IntegerUpDown x:Name="UBrobotTaskMoveToPositionX"
                                                             Text="X (mm)" 
                                                             Maximum="1100" 
                                                             Minimum="0" 
                                                             Height="30"
                                                             Delay="300"
                                                             Interval="1"
                                                             HorizontalAlignment="Stretch"/>
                                        <Separator Padding="0" Margin="0"/>
                                        <local:IntegerUpDown x:Name="UBrobotTaskMoveToPositionY"
                                                             Text="Y (mm)"
                                                             Maximum="1100" 
                                                             Minimum="0" 
                                                             Height="30"
                                                             Delay="300"
                                                             Interval="5"
                                                             HorizontalAlignment="Stretch"/>
                                    </StackPanel>
                                    
                                    <!--
                                    <Separator Padding="0" Margin="0"/>
                                    <StackPanel Orientation="Vertical">
                                        <Button x:Name="robotTaskMoveToPositionAtHeading"
                                                Height="25"
                                                HorizontalAlignment="Stretch" 
                                                Content="Move to Position With Facing"/>
                                        <Separator Padding="0" Margin="0"/>
                                        <local:IntegerUpDown Text="Facing (Degrees)" 
                                                             Maximum="100" 
                                                             Minimum="0" 
                                                             Height="30"
                                                             HorizontalAlignment="Stretch"/>
                                        <Separator Padding="0" Margin="0"/>
                                        <local:IntegerUpDown Text="X (mm)" 
                                                             Maximum="100" 
                                                             Minimum="0" 
                                                             Height="30"
                                                             HorizontalAlignment="Stretch"/>
                                        <Separator Padding="0" Margin="0"/>
                                        <local:IntegerUpDown Text="Y (mm)"
                                                             Maximum="100" 
                                                             Minimum="0" 
                                                             Height="30"
                                                             HorizontalAlignment="Stretch"/>                                        
                                    </StackPanel>
                                    -->
                                </StackPanel>
                            </Border>

                            <Border BorderThickness="2" 
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Top" 
                                    Margin="10,10,0,0">
                                <Canvas Height="200" Width="200" 
                                        VerticalAlignment="Top" 
                                        HorizontalAlignment="Left">
                                    <Ellipse Fill="Transparent" 
                                             Width="100" Height="100" 
                                             Canvas.Top="50" Canvas.Left="50" 
                                             HorizontalAlignment="Center" 
                                             VerticalAlignment="Center"/>
                                    <CheckBox x:Name="checkboxManualModeEnable" Width="160" Canvas.Left="20" Canvas.Top="10" Content="Enable Manual Movement"/>

                                    <Button x:Name="btManualModeN"  Content="N"     Height="20" Width="40" Canvas.Left="80"     Canvas.Top="50"     IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeDirectionMouseEnter" MouseLeave="ManualModeMouseLeave"/>
                                    <Button x:Name="btManualModeNE" Content="NE"    Height="24" Width="24" Canvas.Left="120"    Canvas.Top="56"     IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeDirectionMouseEnter" MouseLeave="ManualModeMouseLeave"/>
                                    <Button x:Name="btManualModeE"  Content="E"     Height="40" Width="20" Canvas.Left="130"    Canvas.Top="80"     IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeDirectionMouseEnter" MouseLeave="ManualModeMouseLeave"/>
                                    <Button x:Name="btManualModeSE" Content="SE"    Height="24" Width="24" Canvas.Left="120"    Canvas.Top="120"    IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeDirectionMouseEnter" MouseLeave="ManualModeMouseLeave"/>
                                    <Button x:Name="btManualModeS"  Content="S"     Height="20" Width="40" Canvas.Left="80"     Canvas.Top="130"    IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeDirectionMouseEnter" MouseLeave="ManualModeMouseLeave"/>
                                    <Button x:Name="btManualModeSW" Content="SW"    Height="24" Width="24" Canvas.Left="56"     Canvas.Top="120"    IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeDirectionMouseEnter" MouseLeave="ManualModeMouseLeave"/>
                                    <Button x:Name="btManualModeW"  Content="W"     Height="40" Width="20" Canvas.Left="50"     Canvas.Top="80"     IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeDirectionMouseEnter" MouseLeave="ManualModeMouseLeave"/>
                                    <Button x:Name="btManualModeNW" Content="NW"    Height="24" Width="24" Canvas.Left="56"     Canvas.Top="56"     IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeDirectionMouseEnter" MouseLeave="ManualModeMouseLeave"/>

                                    <!--<WrapPanel Orientation="Horizontal" Width="80" Canvas.Left="90" Canvas.Top="160"/>-->

                                    <Button x:Name="btManualModeCW"     Content="CW"     Height="20" Width="40" Canvas.Left="10" Canvas.Top="173" IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeRotateMouseEnter" MouseLeave="ManualModeMouseLeave"/>
                                    <Button x:Name="btManualModeCCW"    Content="CCW"    Height="20" Width="40" Canvas.Left="55" Canvas.Top="173" IsEnabled="{Binding IsChecked, ElementName=checkboxManualModeEnable}" MouseEnter="ManualModeRotateMouseEnter" MouseLeave="ManualModeMouseLeave"/>
                                    <TextBox x:Name="tbManualModeSpeed" Width="35" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"  Canvas.Left="155" Text="50" Canvas.Top="174" TextChanged="tbManualModeSpeed_TextChanged"/>
                                    <Label Content="Speed" Canvas.Left="112" Canvas.Top="170"/>
                                </Canvas>
                            </Border>
                        </WrapPanel>
                    </TabItem>



                    <TabItem Header="Charging Dock Control" IsEnabled="False">
                        <StackPanel Margin = "5">

                            <WrapPanel>
                                <Border BorderThickness="2"  HorizontalAlignment="Left" Margin="5" Padding="2" Width="500" Height="86">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Label Grid.Row="0" Grid.ColumnSpan="6" HorizontalAlignment="Center" >Light Sensors</Label>

                                        <ToggleButton Grid.Row="1" x:Name="btnDockLightA" Content = "Front" Tag="01" Style="{DynamicResource ButtonStyle1}" />
                                        <TextBox Grid.Row="2" x:Name="tbDockLightA" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="1" x:Name="btnDockLightB" Content = "Front Right" Tag="02" Style="{DynamicResource ButtonStyle1}" />
                                        <TextBox Grid.Row="2" Grid.Column="1" x:Name="tbDockLightB" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="2" x:Name="btnDockLightC" Content = "Rear Right" Tag="03" Style="{DynamicResource ButtonStyle1}" />
                                        <TextBox Grid.Row="2" Grid.Column="2" x:Name="tbDockLightC" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="3" x:Name="btnDockLightD" Content = "Rear"  Tag="04" Style="{DynamicResource ButtonStyle1}" />
                                        <TextBox Grid.Row="2" Grid.Column="3" x:Name="tbDockLightD" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="4" x:Name="btnDockLightE" Content = "Rear Left" Tag="05" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" Grid.Column="4" x:Name="tbDockLightE" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="5" x:Name="btnDockLightF" Content = "Front Left" Tag="06" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" Grid.Column="5" x:Name="tbDockLightF" IsReadOnly="True" Margin="2"/>
                                    </Grid>
                                </Border>
                            </WrapPanel>


                            <Border BorderThickness="2"  HorizontalAlignment="Left" Margin="5" Padding="2" Width="130" Height="150">
                                <StackPanel Orientation="Vertical" Margin="0">
                                    <Label FontWeight="Bold" HorizontalAlignment="Center" >Docking Lights</Label>
                                    <CheckBox Margin="20,0,0,0" Tag="0">Front</CheckBox>
                                    <CheckBox Margin="20,0,0,0" Tag="1">Front Right</CheckBox>
                                    <CheckBox Margin="20,0,0,0" Tag="2">Rear Right</CheckBox>
                                    <CheckBox Margin="20,0,0,0" Tag="3">Rear</CheckBox>
                                    <CheckBox Margin="20,0,0,0" Tag="4">Rear Left</CheckBox>
                                    <CheckBox Margin="20,0,0,0" Tag="5">Front Left</CheckBox>
                                </StackPanel>
                            </Border>

                            <!--
                            <Border BorderThickness="2"  HorizontalAlignment="Left" Margin="5" Padding="2" Width="180" Height="150">
                                <StackPanel Orientation="Vertical" Margin="0">
                                    <Label FontWeight="Bold" HorizontalAlignment="Center" >Docking Pad Power Enable</Label>
                                    <CheckBox Margin="50,0,0,0">Front</CheckBox>
                                    <CheckBox Margin="50,0,0,0">Front Right</CheckBox>
                                    <CheckBox Margin="50,0,0,0">Rear Right</CheckBox>
                                    <CheckBox Margin="50,0,0,0">Rear</CheckBox>
                                    <CheckBox Margin="50,0,0,0">Rear Left</CheckBox>
                                    <CheckBox Margin="50,0,0,0">Front Left</CheckBox>
                                </StackPanel>
                            </Border>
                            -->


                        </StackPanel>
                    </TabItem>


                    <TabItem Header = "Systems Test" IsEnabled="False">
                        <StackPanel Margin = "5">

                            <WrapPanel Margin="0,2">
                                <Button x:Name="btnSysTestCommunications" Content="Comms Test" Margin="5,5,0,5" Click="btnSysTestCommunications_Click" />
                                <Button x:Name="btnSysTestPreviousTest" Content = "Previous Test" Margin="5,5,0,5" Click="btnSysTestPreviousTest_Click"/>
                                <Button x:Name="btnSysTestNextTest" Content = "Next Test" Margin="5,5,0,5" Click="btnSysTestNextTest_Click"/>
                            </WrapPanel>


                            <WrapPanel>
                                <Border BorderThickness="2"  HorizontalAlignment="Left" Margin="5" Padding="2" Width="500" Height="86">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Label Grid.Row="0" Grid.ColumnSpan="6" HorizontalAlignment="Center" >Proximity Sensors</Label>

                                        <ToggleButton Grid.Row="1" x:Name="btnSysTestProxmityA" Content = "Front" Tag="Proximity,FA" Style="{DynamicResource ButtonStyle1}" />
                                        <TextBox Grid.Row="2" x:Name="tbSysTestProximityA" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="1" x:Name="btnSysTestProxmityB" Content = "Front Right" Tag="Proximity,FF" Style="{DynamicResource ButtonStyle1}" />
                                        <TextBox Grid.Row="2" Grid.Column="1" x:Name="tbSysTestProximityB" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="2" x:Name="btnSysTestProxmityC" Content = "Rear Right" Tag="Proximity,FE" Style="{DynamicResource ButtonStyle1}" />
                                        <TextBox Grid.Row="2" Grid.Column="2" x:Name="tbSysTestProximityC" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="3" x:Name="btnSysTestProxmityD" Content = "Rear"  Tag="Proximity,FD" Style="{DynamicResource ButtonStyle1}" />
                                        <TextBox Grid.Row="2" Grid.Column="3" x:Name="tbSysTestProximityD" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="4" x:Name="btnSysTestProxmityE" Content = "Rear Left" Tag="Proximity,FC" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" Grid.Column="4" x:Name="tbSysTestProximityE" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="5" x:Name="btnSysTestProxmityF" Content = "Front Left" Tag="Proximity,FB" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" Grid.Column="5" x:Name="tbSysTestProximityF" IsReadOnly="True" Margin="2"/>


                                    </Grid>
                                </Border>
                            </WrapPanel>

                            <WrapPanel>
                                <Border BorderThickness="2" MaxWidth="505" HorizontalAlignment="Left" Margin="5" Padding="2" Width="210" Height="86">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Label Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" >Light Sensors</Label>

                                        <ToggleButton Grid.Row="1"  x:Name="btnSysTestLightLHS" Content = "Left Hand Side" Tag="Light,F9" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" x:Name="tbSysTestLightSensorLHS" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="1" x:Name="btnSysTestLightRHS" Content = "Right Hand Side" Tag="Light,F8" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" Grid.Column="1" x:Name="tbSysTestLightSensorRHS" IsReadOnly="True" Margin="2"/>
                                    </Grid>
                                </Border>
                                <Border BorderThickness="2" MaxWidth="505" HorizontalAlignment="Left" Margin="5" Padding="1" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Label Grid.Row="0" Grid.ColumnSpan="4" HorizontalAlignment="Center">Line Followers</Label>

                                        <ToggleButton Grid.Row="1" x:Name="btnSysTestLineFL" Content = "Far Left" Tag="Line,0D" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" x:Name="tbSysTestLineFollowerFarLeft" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton  Grid.Row="1" Grid.Column="1" x:Name="btnSysTestLineCL" Content = "Centre Left" Tag="Line,0F" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" Grid.Column="1"  x:Name="tbSysTestLineFollowerCentreLeft" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="2" x:Name="btnSysTestLineCR" Content = "Centre Right" Tag="Line,00" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" Grid.Column="2" x:Name="tbSysTestLineFollowerCentreRight" IsReadOnly="True" Margin="2"/>

                                        <ToggleButton Grid.Row="1" Grid.Column="3" x:Name="btnSysTestLineFR" Content = "Far Right" Tag="Line,07" Style="{DynamicResource ButtonStyle1}"/>
                                        <TextBox Grid.Row="2" Grid.Column="3" x:Name="tbSysTestLineFollowerFarRight" IsReadOnly="True" Margin="2"/>

                                    </Grid>
                                </Border>
                            </WrapPanel>

                            <WrapPanel>
                                <StackPanel HorizontalAlignment="Left">
                                    <Border BorderThickness="2" MaxWidth="505" HorizontalAlignment="Left" Margin="5" Padding="1" >
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <Label Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Center">Navigation</Label>

                                            <ToggleButton Grid.Row="1" Grid.Column="0" x:Name="btnSysTestMouse" Content = "Mouse" Tag="Mouse" Style="{DynamicResource ButtonStyle1}" />
                                            <WrapPanel Grid.Row="2" Grid.Column="0">
                                                <Label Foreground="{StaticResource FontLightBrush}" Content="DX:"/>
                                                <TextBox x:Name="tbSysTestMouseDX" IsReadOnly="True" Width="30" Margin="2"/>
                                                <Label Foreground="{StaticResource FontLightBrush}" Content="DY:"/>
                                                <TextBox x:Name="tbSysTestMouseDY" IsReadOnly="True" Width="30" Margin="2"/>
                                            </WrapPanel>


                                            <ToggleButton Grid.Row="1" Grid.Column="1" x:Name="btnSysTestIMU" Content = "IMU" Tag = "IMU" Style="{DynamicResource ButtonStyle1}"/>
                                            <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="1" Width="120">
                                                <WrapPanel>
                                                    <Label Content="Pitch:" Margin="1,0,0,0"/>
                                                    <TextBox x:Name="tbSysTestIMUPitch" IsReadOnly="True" Width="60" Margin="2" MaxLength="5"/>
                                                </WrapPanel>

                                                <WrapPanel>
                                                    <Label Content=" Roll: "/>
                                                    <TextBox x:Name="tbSysTestIMURoll" IsReadOnly="True" Width="60" Margin="2"  MaxLength="5"/>
                                                </WrapPanel>

                                                <WrapPanel>
                                                    <Label Content=" Yaw: "/>
                                                    <TextBox x:Name="tbSysTestIMUYaw" IsReadOnly="True" Width="60" Margin="2"  MaxLength="5"/>
                                                </WrapPanel>

                                            </StackPanel>

                                        </Grid>
                                    </Border>


                                    <WrapPanel>
                                        <Border BorderThickness="2"  HorizontalAlignment="Left" Margin="5" Width="240" Height="90" >
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="4*" />
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="0.8*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>

                                                <Label Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Center">TWI MUX</Label>

                                                <ComboBox Grid.Row="1" Grid.Column="0" x:Name = "cbSysTestTWISet"  MinHeight = "24" Width = "182"  HorizontalAlignment="Center" SelectedIndex = "0" Margin="3">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Path=Key}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                                <Button Grid.Row="1" Grid.Column="1"  x:Name="btnSysTestTWISet" Content = "Set"  Margin="3" Click="btnSysTestTWISet_Click"/>

                                                <TextBox Grid.Row="2" Grid.Column="0" x:Name="tbSysTestTWIRead" IsReadOnly="True" Width="180" Margin="3"/>
                                            </Grid>
                                        </Border>
                                    </WrapPanel>
                                </StackPanel>

                                <Border BorderThickness="2" MaxWidth="505" HorizontalAlignment="Left" Margin="5" Padding="0" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="5*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Label Grid.Row="0" Grid.ColumnSpan="3" HorizontalAlignment="Center">MOTORS</Label>

                                        <Label Grid.Column="0"  Grid.Row="1" Content = "Rear" HorizontalAlignment="Center" />
                                        <Slider Grid.Column="0" Grid.Row="2" x:Name="slMotorOne" Tag="01" Minimum="-100" Maximum="100" LargeChange="0" Orientation="Vertical" TickFrequency="10" Height="120" Margin="10,0" ValueChanged="slMotor_ValueChanged" Thumb.DragCompleted="slMotor_DragCompleted" HorizontalAlignment="Center"/>
                                        <TextBox Grid.Column="0" Grid.Row="3" x:Name="tbSysTestMotor1" Text="{Binding ElementName=slMotorOne, Path=Value, UpdateSourceTrigger=PropertyChanged, StringFormat=F0}" Width="35" Margin="5,0,5,5"/>

                                        <Label Grid.Column="1"  Grid.Row="1" Content = "Front Right" HorizontalAlignment="Center"/>
                                        <Slider Grid.Column="1" Grid.Row="2" x:Name="slMotorTwo" Tag="02" Minimum="-100" Maximum="100" LargeChange="0"  Orientation="Vertical" TickFrequency="10" Height="120" Margin="10,0" ValueChanged="slMotor_ValueChanged" Thumb.DragCompleted="slMotor_DragCompleted" HorizontalAlignment="Center"/>
                                        <TextBox Grid.Column="1" Grid.Row="3" x:Name="tbSysTestMotor2" Text="{Binding ElementName=slMotorTwo, Path=Value, UpdateSourceTrigger=PropertyChanged, StringFormat=F0}" Width="35" Margin="5,0,5,5"/>

                                        <Label Grid.Column="2"  Grid.Row="1" Content = "Front Left" HorizontalAlignment="Center"/>
                                        <Slider Grid.Column="2" Grid.Row="2" x:Name="slMotorThree" Tag="03" Minimum="-100" Maximum="100" LargeChange="0"  Orientation="Vertical" TickFrequency="10" Height="120" Margin="10,0" ValueChanged="slMotor_ValueChanged" Thumb.DragCompleted="slMotor_DragCompleted" HorizontalAlignment="Center"/>
                                        <TextBox Grid.Column="2" Grid.Row="3" x:Name="tbSysTestMotor3" Text="{Binding ElementName=slMotorThree, Path=Value, UpdateSourceTrigger=PropertyChanged, StringFormat=F0}" Width="35" Margin="5,0,5,5" />
                                    </Grid>
                                </Border>

                            </WrapPanel>

                            <!--<Label Background="Red">To Add: Camera, Fast Charge Chip, External/Robot->Robot TWI</Label>-->

                        </StackPanel>
                    </TabItem>



                    <TabItem Header="Debug" IsEnabled="False" >
                        <TabControl Margin="5" TabStripPlacement="Left">


                            <!-- The following code alllows vertical tabs -->

                            <TabControl.Resources>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentPresenter Content="{TemplateBinding Content}">
                                                    <ContentPresenter.LayoutTransform>
                                                        <RotateTransform Angle="270" />
                                                    </ContentPresenter.LayoutTransform>
                                                </ContentPresenter>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Padding" Value="5" />
                                </Style>
                            </TabControl.Resources>

                            <TabItem Header="Serial Communication">
                                <Grid>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Column="0" Text="Data to Send:" HorizontalAlignment="Left" Margin="10"/>
                                    <RichTextBox Grid.Column="1" x:Name="rtbSendBuffer" Margin="10" HorizontalAlignment="Stretch" Width="Auto"/>
                                    <Button Grid.Column="2" Content="Send" x:Name="btnSerialSend" Margin="10" Click="Button_Click" HorizontalAlignment="Right"/>
                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="3" Text="Sent Data" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,00,10,0"/>
                                    <RichTextBox Grid.Row="2" Grid.ColumnSpan="3" x:Name="rtbSerialSent" Margin="30,10,30,30" IsReadOnly="True" Height="Auto"/>

                                </Grid>
                            </TabItem>

                            <TabItem Header="Xbee Communication">
                                <Grid>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Column="0" Text="Message Data:" HorizontalAlignment="Left" Margin="10"/>
                                    <RichTextBox Grid.Column="1" x:Name="rtbXbeeSendBuffer" Margin="10" HorizontalAlignment="Stretch" Width="Auto"/>
                                    <Button Grid.Column="2" Content="Send" x:Name="btnXbeeSend" Margin="10"  HorizontalAlignment="Right" Click="btnXbeeSend_Click"/>
                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="3" Text="Sent Data" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,00,10,0"/>
                                    <RichTextBox Grid.Row="2" Grid.ColumnSpan="3" x:Name="rtbXbeeSent" Margin="30,10,30,30" IsReadOnly="True" Height="Auto"/>

                                </Grid>
                            </TabItem>

                        </TabControl>

                    </TabItem>

                    <TabItem Header="Camera" IsEnabled="False" >
                        <StackPanel Margin = "5">

                            <WrapPanel Margin="0,2">
                                <Button x:Name="btnCameraTest" Content="Camera Test" Margin="5,5,0,5" Click="btnCameraTest_Click" />
                                <Button x:Name="btnCameraTestClearFrame" Content = "Reset Frame" Margin="5,5,0,5" Click="btnCameraTestClearFrame_Click"/>
                                <Button x:Name="btnCameraTestSaveImage" Content = "Save Image" Margin="5,5,0,5" Click="btnCameraTestSaveImage_Click"/>
                            </WrapPanel>

                            <Image x:Name="testImage" />

                        </StackPanel>
                    </TabItem>

                </TabControl>
            </DockPanel>

            <local:ItemList x:Name="ItemsList1"
                             Grid.Row="1" Grid.Column="2"             
                             Items="{Binding ItemList, RelativeSource={RelativeSource AncestorType=Window}}" SelectedItemChanged="ItemsList1_SelectedItemChanged"/>
            
            <GridSplitter Grid.Column="0"
                      Grid.Row="1"
                      Width="5" 
                      HorizontalAlignment="Right"
                      Background="{StaticResource GridSplitterBackgroundBrush}"/>
            <GridSplitter Grid.Column="2"
                      Grid.Row="1"
                      Width="5" 
                      HorizontalAlignment="Left"
                      Background="{StaticResource GridSplitterBackgroundBrush}"/>
        </Grid>
    </DockPanel>
</Window>

