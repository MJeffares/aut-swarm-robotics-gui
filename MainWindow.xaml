<Window x:Class="SwarmRoboticsGUI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:SwarmRoboticsGUI"
    xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
    xmlns:em="clr-namespace:Emgu.CV.UI;assembly=Emgu.CV.UI"
    
    mc:Ignorable="d"
    Title="Swarm Robotics Graphics User Interface" Height="900" Width="1600" MinHeight="300" MinWidth="500" WindowStartupLocation="CenterScreen">

    <DockPanel x:Name="innerWin">
        <Menu DockPanel.Dock="Top" MouseEnter="menu_Hover" Height="21" MinWidth="300">

            <MenuItem Header="File" MouseEnter="menu_Hover" Click="menu_Hover">
                <MenuItem x:Name="menuRecordNew" Header="New Recording" IsEnabled="False" Click="menuRecordNew_Click" />
                <MenuItem x:Name="menuRecordPause" Header="Pause Recording" IsCheckable="True" IsEnabled="False"/>
                <MenuItem x:Name="menuRecordStop" Header="Stop Recording" IsEnabled="False" Click="menuRecordStop_Click" />
                <Separator/>
                <MenuItem x:Name="menuRecordingSettings" Header="Recording Settings" />
            </MenuItem>

            <MenuItem Header="Display" MouseEnter="menu_Hover" Click="menu_Hover">
                <MenuItem x:Name="menuViewList" Header="View"/>
                <MenuItem x:Name="menuFilterList" Header="Camera Filters" MouseEnter="menu_Hover" Click="menu_Hover"/>
                <MenuItem x:Name="menuOverlayList" Header="Overlays" MouseEnter="menu_Hover" Click="menu_Hover">
                    <MenuItem x:Name="menuOverlayNone" Header="No Overlay" IsCheckable="True" IsChecked="True" Click="menuPlaceHolder_Click"/>
                    <MenuItem x:Name="menuOverlayPlaceHolderOne" Header="PlaceHolder" IsCheckable="True" Click="menuPlaceHolder_Click"/>
                    <MenuItem x:Name="menuFilterPlaceHolderTwo" Header="PlaceHolder" IsCheckable="True" Click="menuPlaceHolder_Click"/>
                    <Separator/>
                    <MenuItem x:Name="menuOverlaySettings" Header="Settings" Click="menuPlaceHolder_Click"/>
                </MenuItem>
                <MenuItem x:Name="menuFilterFlipVertical" Header="Flip Vertical" Click="menuFilterFlipVertical_Click"/>
                <MenuItem x:Name="menuFilterFlipHorizontal" Header="Flip Horizontal" Click="menuFilterFlipHorizontal_Click"/>
                <MenuItem x:Name="menuDisplayPopOut" Header="Pop Out Window" Click="menuDisplayPopOut_Click"/>

            </MenuItem>

            <MenuItem Header="Camera" MouseEnter="MenuItem_MouseEnter" Click="menu_Hover">
                <MenuItem x:Name="menuCameraList" Header="Connected Cameras" MouseEnter="menu_Hover"/>
                <MenuItem x:Name="menuCameraConnect" Header="Start Capture" IsEnabled="False" IsCheckable="True"  Click="menuCameraConnect_Click"/>
                <MenuItem x:Name="menuCameraFreeze" Header="Freeze Frame" IsEnabled="False" IsCheckable="True" Click="menuCameraFreeze_Click" />
                <Separator/>
                <MenuItem x:Name="menuCameraOptions" Header="Camera Options" Click="menuCameraOptions_Click"/>
            </MenuItem>

            <MenuItem Header="Serial Comms" MouseEnter="MenuItem_MouseEnter" Click="menu_Hover">
                <MenuItem x:Name="menuCommunicationPortList" Header="Communication Port" MouseEnter="menu_Hover"/>
                <MenuItem x:Name="menuCommunicationBaudList" Header="Baud Rate" MouseEnter="menu_Hover"/>
                <MenuItem x:Name="menuCommunicationParityList" Header="Parity" MouseEnter="menu_Hover"/>
                <MenuItem x:Name="menuCommunicationDataList" Header="Data Bits" MouseEnter="menu_Hover"/>
                <MenuItem x:Name="menuCommunicationStopBitsList" Header="Stop Bits" MouseEnter="menu_Hover"/>
                <MenuItem x:Name="menuCommunicationHandshakeList" Header="Handshaking" MouseEnter="menu_Hover"/>
                <MenuItem x:Name="menuCommunicationConnect" Header="Connect" IsEnabled="False" IsCheckable="True" />
                <Separator/>
                <MenuItem x:Name="menuCommunicationoptions" Header="Options" Click="menuCameraOptions_Click"/>
            </MenuItem>

            <MenuItem Header="Replay" MouseEnter="menu_Hover" Click="menu_Hover">
                <MenuItem x:Name="menuReplayOpen" Header="Open Replay" Click="menuReplayOpen_Click"/>
                <MenuItem x:Name="menuReplayPause" Header="Pause Replay" IsCheckable="True" IsEnabled="False"/>
                <Separator/>
                <MenuItem x:Name="menuReplaySettings" Header="Video Settings" Click="menuPlaceHolder_Click" />
            </MenuItem>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="51"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem>
                <TextBlock Name="statusFPS" Text="FPS: "/>
            </StatusBarItem>

            <Separator Grid.Column="1"/>

            <StatusBarItem Grid.Column="2">
                <TextBlock Name="statusRecordingDot" Foreground="Black" Text="●"/>
            </StatusBarItem>

            <StatusBarItem Grid.Column="3">
                <TextBlock Name="statusRecordingText" Text="Not Recording"/>
            </StatusBarItem>

            <Separator Grid.Column="4"/>

            <StatusBarItem Grid.Column="5">
                <TextBlock Name="statusCameraName" Text="No Camera Selected"/>
            </StatusBarItem>

            <Separator Grid.Column="6"/>

            <StatusBarItem Grid.Column="7">
                <TextBlock Name="statusDisplayFilter" Text="No Filter"/>
            </StatusBarItem>

            <Separator Grid.Column="8"/>

            <StatusBarItem Grid.Column="9">
                <TextBlock Name="statusTime" Text="00:00:00:00">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Current Time"/>
                            <MenuItem Header="Recording Time"/>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
            </StatusBarItem>

        </StatusBar>

        <Grid x:Name="mainGrid">

            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Column0" Width="*" MinWidth="150"/>
                <ColumnDefinition x:Name="Column1" Width="2*" MinWidth="300"/>
                <ColumnDefinition x:Name="Column2" Width="5"/>
                <ColumnDefinition x:Name="Column3" Width="2*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition x:Name="Row0" Height="3*"/>
                <RowDefinition x:Name="Row1" Height="1*"/>
            </Grid.RowDefinitions>


            <Grid  Grid.Column="0" Grid.Row="0" Grid.RowSpan = "2" Margin="5">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Received Data" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,10,10,0"/>
                <WrapPanel Grid.Row="1">
                    <!--<Button x:Name="receivedDataNewline" Content="/n" Margin="10" Click="receivedDataNewline_Click"/>-->
                    <!--<Button x:Name="receivedDataClear" Content="clear" Margin="5" Click="receivedDataClear_Click"/>-->
                    <Button x:Name="receivedDataClear" Content="clear" Margin="5"/>
                    <!--<Button x:Name="receivedDataRemove" Content="Add" Margin="5" Click="receivedDataAdd_Click"/>
                    <Button x:Name="receivedDataAdd" Content="Remove" Margin="5" Click="receivedDataRemove_Click"/>-->
                </WrapPanel>

                <ListView Name="lvCommunicatedMessages" Grid.Column="0" Grid.Row="2" Grid.RowSpan = "1" Margin="5" ScrollViewer.HorizontalScrollBarVisibility="Visible">
                    <ListView.Resources>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView x:Name = "gvCommunicatedMessages">
                            <GridViewColumn Header="TimeStamp" x:Name = "gvcTimeStamp" DisplayMemberBinding="{Binding TimeStampDisplay}">
                                <!--<GridViewColumnHeader Tag="time_stamp" Click="GridViewColumnHeader_Click" >TimeStamp</GridViewColumnHeader>-->
                            </GridViewColumn>

                                <GridViewColumn Header="Raw Data"  x:Name = "gvcRawData" DisplayMemberBinding="{Binding RawMessageDisplay}"/>
                            <GridViewColumn Header="Xbee Frame Length" x:Name = "gvcXbeeFrameLength" DisplayMemberBinding="{Binding FrameLengthDisplay}"/>
                            <GridViewColumn Header="Xbee Frame ID"  x:Name = "gvcXbeeFrameID" DisplayMemberBinding="{Binding FrameIDDisplay}"/>
                            <!--<GridViewColumn Header="Xbee Frame Data"  x:Name = "gvcXbeeFrameData" DisplayMemberBinding="{Binding CommandDataDisplay}"/>-->
                            <GridViewColumn Header="Source Address"  x:Name = "gvcSourceAddress" DisplayMemberBinding="{Binding SourceDisplay}"/>
                            <GridViewColumn Header="Message Type"  x:Name = "gvcMessageType" DisplayMemberBinding="{Binding MessageTypeDisplay}"/>
                            <GridViewColumn Header="Message Data"  x:Name = "gvcMessageData" DisplayMemberBinding="{Binding MessageDataDisplay}"/>

                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>

            
            
            
            <!--<Grid Grid.Column="0" Grid.RowSpan="1">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Received Data" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,10,10,0"/>
                <WrapPanel Grid.Row="1">
                    <Button x:Name="receivedDataNewline" Content="/n" Margin="10" Click="receivedDataNewline_Click"/>
                    <Button x:Name="receivedDataClear" Content="clear" Margin="10" Click="receivedDataClear_Click"/>
                </WrapPanel>

                <RichTextBox Grid.Row="2" x:Name="rtbSerialReceived" Margin="10,10,10,10" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Height="Auto" Width="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            </Grid>-->
            
            <!--<ListView Name="lvCommunicatedMessages" Grid.Column="0" Grid.Row="2" Margin="5">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="TimeStamp" DisplayMemberBinding="{Binding time_stamp}"/>
                        <GridViewColumn Header="Raw Data" DisplayMemberBinding="{Binding RawMessageDisplay}"/>
                        <GridViewColumn Header="Xbee Frame Length" DisplayMemberBinding="{Binding FrameLengthDisplay}"/>
                        <GridViewColumn Header="Xbee Frame ID" DisplayMemberBinding="{Binding FrameCommandIDDisplay}"/>
                        <GridViewColumn Header="Xbee Frame Data" DisplayMemberBinding="{Binding CommandDataDisplay}"/>
                        <GridViewColumn Header="Xbee Frame Checksum" DisplayMemberBinding="{Binding FrameChecksumDisplay}"/>
                        <GridViewColumn Header="16-Bit Source Address" DisplayMemberBinding="{Binding Source16Display}"/>
                        <GridViewColumn Header="64-Bit Source Address" DisplayMemberBinding="{Binding Source64Display}"/>
                        <GridViewColumn Header="Message Type" DisplayMemberBinding="{Binding MessageTypeDisplay}"/>
                        <GridViewColumn Header="Message Data" DisplayMemberBinding="{Binding MessageDataDisplay}"/>

                    </GridView>
                </ListView.View>
            </ListView> -->

            <DockPanel Grid.Column="1">
                <StatusBar DockPanel.Dock="Right" Background="Transparent" Margin="10,0,0,0">
                    <StatusBar.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </StatusBar.ItemsPanel>

                    <StatusBarItem Grid.Row="1" Margin="0,0,0,0" Background="#FFF1EDED" Padding="0,0,0,0" MouseDown="btnCameraMinimise_Click" Width="22" Height="16">
                        <Label x:Name="displayArrowTop" Content="   >" Padding="0"/>
                    </StatusBarItem>

                    <StatusBarItem Grid.Row="2" Margin="0,0,0,0" Background="#FFF1EDED" Padding="0" MouseDown="btnCameraMinimise_Click"  Width="22" Height="46">

                        <Label Content="Display" Padding="3">
                            <Label.LayoutTransform>
                                <RotateTransform Angle="270" />
                            </Label.LayoutTransform>
                        </Label>

                    </StatusBarItem>

                    <StatusBarItem Grid.Row="3" Margin="0,0,0,0" Background="#FFF1EDED" Padding="0,0,0,0" MouseDown="btnCameraMinimise_Click" Width="22" Height="16">
                        <Label x:Name="displayArrowBottom" Content="   >" Padding="0"/>
                    </StatusBarItem>


                </StatusBar>

                <TabControl>
                    <TabItem Header="Robot Control">
                        <WrapPanel Orientation="Vertical">
                            <Button Content="PlaceHolder"  Margin="10" />
                            <Button Content="PlaceHolder"  Margin="10" />
                        </WrapPanel>
                    </TabItem>

                    <TabItem Header="Tower Control">

                    </TabItem>

                    <TabItem Header = "Systems Test" >
                        <StackPanel Margin = "5">

                            <TextBlock>Instructions for how to use this page (TODO) <LineBreak/> Step 1: Do A  <LineBreak/> Step 2: Do B  <LineBreak/> Step 3: Do C</TextBlock> 

                            <WrapPanel Margin="0,2">
                                <Button Content = "Enter Test Mode" Margin="5,5,0,5" />
                                <Button Content = "Previous Test" Margin="5,5,0,5" />
                                <Button Content = "Next Test" Margin="5,5,0,5" />
                            </WrapPanel>

                            <WrapPanel>
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Proximity A"  />
                                    <TextBox x:Name="tbProximitySensorA" />
                                </StackPanel>
                                
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Proximity B"  />
                                    <TextBox x:Name="tbProximitySensorB" />
                                </StackPanel>

                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Proximity C"  />
                                    <TextBox x:Name="tbProximitySensorC" />
                                </StackPanel>

                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Proximity D"  />
                                    <TextBox x:Name="tbProximitySensorD" />
                                </StackPanel>

                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Proximity E"  />
                                    <TextBox x:Name="tbProximitySensorE" />
                                </StackPanel>

                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Proximity  F"  />
                                    <TextBox x:Name="tbProximitySensorF" />
                                </StackPanel>
                            </WrapPanel>

                            <WrapPanel>
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Light Sensor LHS"  />
                                    <TextBox x:Name="tbLightSensorLHS" />
                                </StackPanel>
                                
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Light Sensor RHS"  />
                                    <TextBox x:Name="tbLightSensorRHS" />
                                </StackPanel>
                            </WrapPanel>

                            <WrapPanel>
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Mouse DX"  />
                                    <TextBox x:Name="tbMouseDX" />
                                </StackPanel>

                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Mouse DY"  />
                                    <TextBox x:Name="tbMouseDY" />
                                </StackPanel>
                            </WrapPanel>

                            <WrapPanel>
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "IMU W"  />
                                    <TextBox x:Name="tbIMUW" />
                                </StackPanel>
                                
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "IMU X"  />
                                    <TextBox x:Name="tbIMUX" />
                                </StackPanel>
                                
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "IMU Y"  />
                                    <TextBox x:Name="tbIMUY" />
                                </StackPanel>

                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "IMU Z"  />
                                    <TextBox x:Name="tbIMUZ" />
                                </StackPanel>
                            </WrapPanel>

                            <WrapPanel>
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Line Follower Far Left"  />
                                    <TextBox x:Name="tbLineFollowerFarLeft" />
                                </StackPanel>

                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Line Follower Centre Left"  />
                                    <TextBox x:Name="tbLineFollowerCentreLeft" />
                                </StackPanel>

                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Line Follower Centre Right"  />
                                    <TextBox x:Name="tbLineFollowerCentreRight" />
                                </StackPanel>

                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Line Follower Far Right"  />
                                    <TextBox x:Name="tbLineFollowerFarRight" />
                                </StackPanel>
                            </WrapPanel>

                            <WrapPanel>
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "Fast Charge Chip"  />
                                    <TextBox x:Name="tbFastCharge" />
                                </StackPanel>
                            </WrapPanel>

                            <WrapPanel>
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "TWI Multiplexer"  />
                                    <TextBox x:Name="tbTWIMultiplexer" />
                                </StackPanel>
                            </WrapPanel>

                            <WrapPanel>
                                <StackPanel Margin="5,0,0,0">
                                    <Label Content = "OnBoard Camera"  />
                                    <TextBox x:Name="tbOnBoardCamera" />
                                </StackPanel>
                            </WrapPanel>


                        </StackPanel>
                    </TabItem>


                    <TabItem Header="Debug">
                        <TabControl Margin="5" TabStripPlacement="Left">

                            <!-- The following code alllows vertical tabs -->
                            <TabControl.Resources>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentPresenter Content="{TemplateBinding Content}">
                                                    <ContentPresenter.LayoutTransform>
                                                        <RotateTransform Angle="270" />
                                                    </ContentPresenter.LayoutTransform>
                                                </ContentPresenter>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Padding" Value="5" />
                                </Style>
                            </TabControl.Resources>
                            <!--********-->

                            <TabItem Header="Serial Communication">
                                <Grid>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Column="0" Text="Data to Send:" HorizontalAlignment="Left" Margin="10"/>
                                    <RichTextBox Grid.Column="1" x:Name="rtbSendBuffer" Margin="10" HorizontalAlignment="Stretch" Width="Auto"/>
                                    <Button Grid.Column="2" Content="Send" x:Name="btnSerialSend" Margin="10" Click="Button_Click" HorizontalAlignment="Right"/>
                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="3" Text="Sent Data" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,00,10,0"/>
                                    <RichTextBox Grid.Row="2" Grid.ColumnSpan="3" x:Name="rtbSerialSent" Margin="30,10,30,30" IsReadOnly="True" Height="Auto"/>

                                </Grid>
                            </TabItem>

                            <TabItem Header="Xbee Communication">
                                <Grid>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Column="0" Text="Message Data:" HorizontalAlignment="Left" Margin="10"/>
                                    <RichTextBox Grid.Column="1" x:Name="rtbXbeeSendBuffer" Margin="10" HorizontalAlignment="Stretch" Width="Auto"/>
                                    <Button Grid.Column="2" Content="Send" x:Name="btnXbeeSend" Margin="10"  HorizontalAlignment="Right" Click="btnXbeeSend_Click"/>
                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="3" Text="Sent Data" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="10,00,10,0"/>
                                    <RichTextBox Grid.Row="2" Grid.ColumnSpan="3" x:Name="rtbXbeeSent" Margin="30,10,30,30" IsReadOnly="True" Height="Auto"/>

                                </Grid>
                            </TabItem>

                            <TabItem Header="Robot Commands">
                                <WrapPanel Orientation="Vertical">
                                    <Button Grid.Column="2" Content="Communication Test" x:Name="btnCommunicationTest" Margin="10" Click="btnCommunicationTest_Click" />
                                    <Button Grid.Column="2" Content="Battery Voltage" x:Name="btnBatteryVoltage" Margin="10" Click="btnBatteryVoltage_Click" />
                                </WrapPanel>
                            </TabItem>

                            <TabItem Header="Robot Sensors"/>
                            <!--<TabItem Header="Placeholder"/>-->
                        </TabControl>
                    </TabItem>
                </TabControl>
            </DockPanel>

            <GridSplitter x:Name="cameraGridSplitter" Grid.Column="2" Width="5" HorizontalAlignment="Center">
            </GridSplitter>

            <WindowsFormsHost Grid.Column="3" Name="host1" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0,0,0,0" Visibility="Visible">
                <em:ImageBox x:Name="captureImageBox" Height="240" Width="320" SizeMode="StretchImage" FunctionalMode="Minimum"/>
            </WindowsFormsHost>



            <Grid Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="2" Height="Auto" Width="Auto">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width = "Auto"/>
                    <ColumnDefinition Width = "Auto"/>
                    <ColumnDefinition Width = "Auto"/>
                    <ColumnDefinition Width = "Auto"/>
                    <ColumnDefinition Width = "Auto"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height = "Auto"/>
                    <RowDefinition Height = "Auto"/>
                    <RowDefinition Height = "Auto"/>
                </Grid.RowDefinitions>

                <StackPanel>
                    <ComboBox x:Name = "dispSelectRobot"  MinHeight = "24" MinWidth = "89" Margin = "10" SelectedIndex = "0"/>

                    <WrapPanel>
                        <Button Name="dispSelectBtnPrevious" Margin="5,0" Width="60" Click="dispSelectBtnPrevious_Click">Previous</Button>
                        <Button Name="dispSelectBtnNext" Margin="5,0" Width="60" Click="dispSelectBtnNext_Click">Next</Button>
                        <Button Name="dispSelectBtnBlue" Margin="5,0" Width="60">Groups</Button>
                    </WrapPanel>
                </StackPanel>

                <WrapPanel x:Name="dispRobotPanels"  Grid.Column="0" Grid.Row="2" >
                    <StackPanel Background="AliceBlue" Margin="5">
                        <WrapPanel Orientation="Vertical">
                            <Label Content="Robot One"/>
                            <Label Content="Battery Voltage: "/>
                            <Label Content="Postion X:"/>
                            <Label Content="Position Y:"/>
                        </WrapPanel>
                    </StackPanel>
                </WrapPanel>

            </Grid>
        </Grid>
    </DockPanel>
</Window>

