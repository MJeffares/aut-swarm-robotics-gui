<UserControl x:Class="SwarmRoboticsGUI.Settings.SettingsList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SwarmRoboticsGUI.Settings"
             xmlns:e="clr-namespace:SwarmRoboticsGUI"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <!--Brushes-->
        <SolidColorBrush x:Key="ListSpacerBrush" Color="#222"/>
        <SolidColorBrush x:Key="ListItemBrush" Color="#444"/>
        <SolidColorBrush x:Key="ListRobotBrush" Color="#111"/>
        <SolidColorBrush x:Key="ListGroupBrush" Color="#333"/>
        <SolidColorBrush x:Key="ListBrush" Color="#333"/>

        <!--Shapes-->
        <DataTemplate x:Key="Plus">
            <Polygon Fill="#FF202020" Stretch="Uniform">
                <Polygon.Points>
                    <Point X="0" Y="1"/>
                    <Point X="1" Y="1"/>
                    <Point X="1" Y="0"/>
                    <Point X="2" Y="0"/>
                    <Point X="2" Y="1"/>
                    <Point X="3" Y="1"/>
                    <Point X="3" Y="2"/>
                    <Point X="2" Y="2"/>
                    <Point X="2" Y="3"/>
                    <Point X="1" Y="3"/>
                    <Point X="1" Y="2"/>
                    <Point X="0" Y="2"/>
                </Polygon.Points>
            </Polygon>
        </DataTemplate>
        <DataTemplate x:Key="Minus">
            <Polygon Fill="#FF202020" Stretch="Uniform">
                <Polygon.Points>
                    <Point X="0" Y="1"/>
                    <Point X="3" Y="1"/>
                    <Point X="3" Y="2"/>
                    <Point X="0" Y="2"/>
                </Polygon.Points>
            </Polygon>
        </DataTemplate>

        <ControlTemplate x:Key="SuperSlider" TargetType="{x:Type Slider}">
            <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Rectangle x:Name="PART_SelectionRange"/>

                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.Thumb>
                            <Thumb x:Name="Thumb">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="Thumb">
                                        <Ellipse Fill="#444" Stroke="#CCC" Width="16" Height="16" SnapsToDevicePixels="True"/>
                                        <!--<Rectangle Fill="#444" Stroke="#CCC" Width="10" Height="18" SnapsToDevicePixels="True"/>-->
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
        </ControlTemplate>

        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border BorderThickness="0" Background="Transparent" Height="50" Width="50">
                            <ContentControl Name="MinMax" Margin="18"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">

                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="ContentTemplate" TargetName="MinMax" Value="{StaticResource Minus}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="ContentTemplate" TargetName="MinMax" Value="{StaticResource Plus}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="{StaticResource ListItemBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Bd" Grid.Column="1" Padding="0"
                                    BorderBrush="{StaticResource ListSpacerBrush}" 
                                    Background="{TemplateBinding Background}" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" ClickMode="Press" Grid.ColumnSpan="2" 
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                  Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                    <ContentPresenter x:Name="PART_Header" Grid.Column="0" Grid.ColumnSpan="2" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Margin="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GroupStyle" TargetType="TreeViewItem">
            <Setter Property="Background" Value="{StaticResource ListGroupBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Bd" Grid.Column="1" Padding="0"
                                    BorderBrush="{StaticResource ListSpacerBrush}" 
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" ClickMode="Press" Grid.ColumnSpan="2" 
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                  Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                    <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Margin="0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <!--<Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid Background="{StaticResource ListBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>

        <TreeView x:Name="RobotTree" Grid.Row="1" 
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  Foreground="White" FontSize="20" Padding="0" BorderThickness="0"
                  Background="Transparent"
                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  ItemsSource="{Binding Groups, RelativeSource={RelativeSource AncestorType=UserControl}}"
                  ItemContainerStyle="{StaticResource GroupStyle}">
            <TreeView.Resources>
                <DataTemplate DataType="{x:Type e:Item}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock FontSize="10" Padding="10,0,0,0" Foreground="White" Text="{Binding Name}"/>
                        <TextBlock Grid.Column="1" FontSize="10" Foreground="White" Text="{Binding Text}"/>
                        <!--<Slider Width="100" Grid.Column="1" Value="{Binding Value}" Maximum="255"/>-->
                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:SettingsRange}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="160"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock VerticalAlignment="Center" FontSize="10" Padding="10,0,0,0" Foreground="White" Text="{Binding Name}"/>
                        <e:RangeSlider x:Name="Range" Width="150" Grid.Column="1"
                                       LowerValue="{Binding Lower}" UpperValue="{Binding Upper}" 
                                       Minimum="{Binding Minimum}" Maximum="{Binding Maximum}"/>
                        <TextBlock VerticalAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Stretch" Grid.Column="2" 
                                   Text="{Binding LowerValue, ElementName=Range, StringFormat=N0}"/>
                        <TextBlock VerticalAlignment="Center" Margin="0,0,0,0" HorizontalAlignment="Stretch" Grid.Column="3" 
                                   Text="{Binding UpperValue,ElementName=Range, StringFormat=N0}"/>
                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:SettingsValue}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="160"/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock VerticalAlignment="Center" FontSize="10" Padding="10,0,0,0" Foreground="White" Text="{Binding Name}"/>
                        <Grid Grid.Column="1" Width="150">
                            <Border Margin="8,0,8,0" Background="#222" VerticalAlignment="Center"
                                Height="4" SnapsToDevicePixels="True"/>
                            <Slider x:Name="Slide" VerticalAlignment="Center" Grid.Column="1" Value="{Binding Value}"
                                Minimum="{Binding Minimum}" Maximum="{Binding Maximum}"
                                Template="{StaticResource SuperSlider}"/>
                        </Grid>
                        <TextBlock VerticalAlignment="Center" Grid.Column="2" Text="{Binding Value, ElementName=Slide, StringFormat=N2}" />
                    </Grid>
                </DataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type local:SettingsGroup}" ItemsSource="{Binding Children}" ItemContainerStyle="{StaticResource ItemStyle}">
                    <TextBlock FontSize="20" Foreground="White" Text="{Binding Name}"/>
                </HierarchicalDataTemplate>
                
            </TreeView.Resources>
        </TreeView>
    </Grid>
</UserControl>
