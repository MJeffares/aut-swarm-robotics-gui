<UserControl x:Class="SwarmRoboticsGUI.Display"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SwarmRoboticsGUI"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <!--List Brushes-->
        <SolidColorBrush x:Key="ListSpacerBrush" Color="#222"/>
        <SolidColorBrush x:Key="ListItemBrush" Color="#444"/>
        <SolidColorBrush x:Key="ListRobotBrush" Color="#111"/>
        <SolidColorBrush x:Key="ListGroupBrush" Color="#333"/>
        <SolidColorBrush x:Key="ListBackgroundBrush" Color="#333"/>

        <!--Robot Brushes-->
        <SolidColorBrush x:Key="RobotSelectedBrush" Color="#CCC"/>
        <SolidColorBrush x:Key="RobotBorderBrush" Color="#000"/>
        <SolidColorBrush x:Key="RobotDirectionBrush" Color="#444"/>
        
        <!--Arena Brushes-->
        <SolidColorBrush x:Key="ViewBoxBackgroundBrush" Color="#222"/>
        <SolidColorBrush x:Key="ArenaBackgroundBrush" Color="#FFF"/>
        
        <!--Window Brushes-->
        <SolidColorBrush x:Key="GridSplitterBackgroundBrush" Color="#444"/>

        <!--Checker Pattern-->
        <VisualBrush x:Key="Checker" TileMode="Tile" Viewport="0,0,16,16" ViewportUnits="Absolute" Viewbox="0,0,15,15" ViewboxUnits="Absolute">
            <VisualBrush.Visual>
                <Grid Background="#181818">
                    <Path Data="M0,0 L0,8 L8,8 L8,0" Fill="#141414" StrokeThickness="0"/>
                    <Path Data="M16,16 L16,8 L8,8 L8,16" Fill="#141414" StrokeThickness="0"/>
                </Grid>
            </VisualBrush.Visual>
        </VisualBrush>

        <!--Hexagon Shape-->
        <Style x:Key="Hexagon" TargetType="Polygon">
            <Setter Property="Points" Value="
                    0,0.25 
                    0,0.75 
                    0.6123724357,1 
                    1.224744871,0.75 
                    1.224744871,0.25 
                    0.6123724357,0"/>
            <Setter Property="Fill" Value="{Binding Colour}"/>
            <Setter Property="Stroke" Value="{StaticResource RobotBorderBrush}"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Fill" Value="{StaticResource RobotSelectedBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!--Triangle Shape-->
        <Style x:Key="Triangle" TargetType="Polygon">
            <Setter Property="Points" Value="
                    0,0 
                    1,0.5 
                    0,1"/>
            <Setter Property="Fill" Value="{StaticResource RobotDirectionBrush}"/>
            <Setter Property="Stretch" Value="Fill"/>
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </UserControl.Resources>

    <Grid>
        
        <Viewbox Stretch="Uniform">
            <Grid>
                <Canvas Background="{StaticResource ArenaBackgroundBrush}" Width="1177" Height="1177">
                    <Line Stroke="Black" StrokeThickness="10" X1="260" Y1="760" X2="920" Y2="420" />
                    <Line Stroke="Black" StrokeThickness="10" Y1="210" X1="600" Y2="967" X2="600" />
                    <Line Stroke="Black" StrokeThickness="10" X1="290" Y1="390" X2="900" Y2="790" />
                </Canvas>
                <ItemsControl Name="Arena"
                          ItemsSource="{Binding Items, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Transparent" Width="1177" Height="1177"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding Path=(local:IObstacle.Location).X}"/>
                        <!--<Setter Property="Canvas.Left" Value="{Binding Location.X}"/>-->
                        <Setter Property="Canvas.Margin" Value="0,0,0,0"/>
                        <Setter Property="Canvas.Top" Value="{Binding Path=(local:IObstacle.Location).Y}"/>
                        <!--<Setter Property="Canvas.Top" Value="{Binding Location.Y}"/>-->
                        <Setter Property="Canvas.Visibility" Value="{Binding Path=(local:IObstacle.IsVisible), Converter={StaticResource BoolToVis}}"/>
                        <!--<Setter Property="Canvas.Visibility" Value="{Binding IsVisible, Converter={StaticResource BoolToVis}}"/>-->
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                            <Grid Background="Transparent">
                                <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Polygon Name="Hexagon" Style="{StaticResource Hexagon}"
                                     Height="{Binding Path=(local:IObstacle.Width)}" Width="{Binding Path=(local:IObstacle.Height)}"
                                     MouseLeftButtonDown="Robot_MouseLeftButtonDown"
                                     RenderTransformOrigin="0.5,0.5">
                                <Polygon.LayoutTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="{Binding FacingDeg}"/>
                                        </TransformGroup>
                                </Polygon.LayoutTransform>
                            </Polygon>

                            <Polygon Style="{StaticResource Triangle}"
                                     Height="20" Width="20" 
                                     RenderTransformOrigin="-0.5,-0.5"
                                     IsHitTestVisible="False"
                                     Visibility="{Binding HasFacing, Converter={StaticResource BoolToVis}, FallbackValue=Hidden}">
                                <Polygon.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding FacingMarker}"/>
                                        <RotateTransform Angle="{Binding FacingDeg}"/>
                                    </TransformGroup>
                                </Polygon.RenderTransform>
                            </Polygon>

                            <TextBlock Grid.Column="1" Text="{Binding Name}" 
                                       VerticalAlignment="Center" HorizontalAlignment="Left"
                                       Padding="5,0,0,0"
                                       Foreground="#000" FontSize="20"
                                       IsHitTestVisible="False">
                            </TextBlock>
                            
                            <!--<Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Location.X, StringFormat=N0}" 
                                       Foreground="#000" FontSize="20"
                                       IsHitTestVisible="False">
                                </TextBlock>
                                <TextBlock Grid.Column="1" Text="{Binding Location.Y, StringFormat=N0}" 
                                       Foreground="#000" FontSize="20"
                                       IsHitTestVisible="False">
                                </TextBlock>
                            </Grid>-->
                            
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            </Grid>
        </Viewbox>
    </Grid>
</UserControl>
